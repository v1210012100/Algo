package com.example.diva.leet.SwordOffer;

public class Sword63 {

    /***
     * 只能买卖一次的 股票利润 。 有三种解法
     * 一 、 暴力法，把 每一天都当做买入的日子 ，再遍历后面的天数。求差，并比较Max
     * ---------------------------------方法一是强制在第i 天买入。
     * 二、  上面的暴力法，把每一天都当做买入的日子，就很蠢， 我们记录一个Min 代表第i 位之前并包括第i 位的最小值。 然后往后遍历所有数据。
     * 等等，这样不是和方法一一样吗。多了许多重复的计算 。
     * 所以，我们把 Min 定义为 不包含第i 位。在第i 位前面的最小值。
     * 然后计算出在第 i 天卖出股票的利润。 并和 Max 比较 。
     * -----------------------------------------方法二的思路是，强制在第i 天卖出 。那么 Max 就是 所有 强制卖出中的 最大的那个。
     * @param prices
     * @return
     */
    public int maxProfit(int[] prices) {
        return 1;
    }
}
